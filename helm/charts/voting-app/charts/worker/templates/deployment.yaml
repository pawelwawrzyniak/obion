---
{{ if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.name }}
  labels:
    app: {{ .Release.Name }}-{{ .Values.name }}
    tier: backend
    # talent: 102062981000
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Values.name }}
      tier: backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.name }}
        tier: backend
        talent: "102062981000"
    spec:
      initContainers:
      - name: init-wait
        image: alpine
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "apk add jq curl && until nc {{ .Release.Name }}-postgresql 5432 -w 5 -z; do echo 'waiting for postgresql to become available' && sleep 10; done"]
        resources:
          limits:
            memory: "100Mi"
            cpu: "50m"
          requests:
            memory: "50Mi"
            cpu: "25m"
      containers:
      - name: {{ .Release.Name }}-{{ .Values.name }}
        image: 102062981000.dkr.ecr.us-east-1.amazonaws.com/{{ .Values.name }}:{{ .Chart.AppVersion }}
        # image: 102062981000.dkr.ecr.us-east-1.amazonaws.com/worker:1.0.0
        imagePullPolicy: IfNotPresent
        # args:
        #   ['/bin/bash', '-c', 'echo "running']
        # env:
        #   - name: 
        #     value: 
        # livenessProbe:
        #   exec:
        #     command:
        #       - cat
        #       - path_to_file
          # initialDelaySeconds: 5
          # periodSeconds: 15
        # volumeMounts:
        #   - name: 
        #     mountPath: 
        #     subPath: 
      restartPolicy: Always
      # nodeSelector:
      #   InstanceType: rke-worker-voting-app-asg
      # topologySpreadConstraints:
      # - maxSkew: 1
      #   topologyKey: node_usage
      #   whenUnsatisfiable: ScheduleAnyway
      #   labelSelector:
      #     matchLabels:
      #       app: {{ .Release.Name }}-{{ .Values.name }}
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: node_usage
      #           operator: NotIn
      #           values:
      #           - cron
      # volumes:
      #   - name: 
      #     configMap:
      #       name: 
      #   - name: 
      #     persistentVolumeClaim:
      #       claimName: 
{{- end }}